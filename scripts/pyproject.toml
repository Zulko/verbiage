[project]
name = "verbiage"
version = "0.1.0"
description = "A word game project"
authors = [{ name = "Author Name", email = "author@example.com" }]
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "google-generativeai",
    "google-cloud-storage",
    "click",
    "pydantic",
    "pandas",
    "openai",
    "pyyaml",
]

[project.optional-dependencies]
dev = ["ruff"]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.11+.
target-version = "py311"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.setuptools]
# Do not auto-discover packages in this flat layout; we'll list modules explicitly
packages = []
py-modules = ["game", "gemini_batch", "VerbiageGame"]
include-package-data = true

[tool.setuptools.packages.find]
# Ensure these directories are not treated as Python packages
exclude = ["instructions*", "word_lists*"]

[tool.setuptools.data-files]
# Install these directories as data (not importable packages)
"verbiage_data/instructions" = ["instructions/**/*"]
"verbiage_data/word_lists" = ["word_lists/**/*"]
